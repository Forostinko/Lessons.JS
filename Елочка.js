//1
//12
//123
//1234
//12345

//до момента входа в цикл будет пустая строка "let str = "",  уже в ходе цикла я начну что то присваивать.
// 1й цикл for (let i = 1; i <= row; i++)   отвечает за колличество строк (высота)
// 2й цикл отвечает за наполнение строки
// <  не сработает 2й цикл на 1й же интерации
// <= поэтому делаем так
// str += i  в данном случае += значит будет накапливать все значения всех интераций
// str += "\n"  чтобы нам сделать перенос строки мы это делаем уже после окончания цикла
// после переноса строки внешний цикл заканчивает пополнение своей интерации и начинается второй цикл
// второй цикл т.е. внутренний, где происходит пополнение строки. J =1 J начинается c 1 но краяняя граница 
// это 2. Будет всего 2 интерации 1 и 2. В строку записывается 1 и 2 после этого внутренний цикл 
// заканчивается и переходим в продолжение интерации 1го внешнего цикла. который добавляет нам перенос 
// строки. И так мы переходим на 3 строчку.
// Остается вывести на печать console.log(str)
// let row = 5  работает до 9. с 10 система нарушиться и будет не ровно.
// Поэтому удобно использовать переменную let row 

// let row = 5
// let str = ""  
//   for (let i = 1; i <= row; i++) {
//   for (let j = 1; j <= i; j++) {
//          str += j
// }
//     str += "\n"
// }
// console.log(str)


// 1
// 12
// 123
// 1234
// 12345
// 123456
// 1234567
// 12345678
// 123456789
// 1234567890
// 12345678901
// 123456789012
// 1234567890123
// 12345678901234
// 123456789012345

//  str += j % 10 - это для того чтобы убрать 10, потому что вывод пирамиды получется кривой из за 10
// let row = 15
// let str = ""  
//   for (let i = 1; i <= row; i++) {
//   for (let j = 1; j <= i; j++) {
//   str += j % 10
// }
// str += "\n"
// }
// console.log(str)



//внешний- первый цикл отвечает за колличество строк
//внутренний- второй цикл отвечает за наполнение строк
// перенос строки  - \n

// let n = 5;
// let str = '';
// for (let i =1; i <= n; i++) {
//     for (let j = 1; j <= i; i++) {
//         str = str + j;    //можем менять j на 1 или *
//     }
//     str = str + '\n';     //обращаемся к строке и делаем перенос строки
// }
// console.log(str);





//54321
//4321
//321
//21
//1

// let n = 5;
// let str = '';
// for (let i =1; i <= n; i++) {
//     for (let j = n + 1 - i; j >= 1; i--) {
//         str += j;
//     }
//     str +='\n';     
// }
// console.log(str);



//    1
//   12
//  123
// 1234
//12345

// до момента входа в цикл будет пустая строка "let str = "",  уже в ходе цикла я начну 
// что то присваивать.
// 1й цикл for (let i = 1; i <= row; i++)   отвечает за колличество строк (высота). Начинаем с 1.
// 2й цикл отвечает за наполнение строки
// <  не сработает 2й цикл на 1й же интерации поэтому делаем <=
// row - i  на 1м шаге выдаст нам 4, потом когда i поменяется на 2, 2й шаг у нас получется что row это 5, 
// 5 - 2 это 3, на 3м шаге 5-3 будет 2
// let row = 5
// let str = "" 

//   for (let i = 1; i <= row; i++) {
//     str = str += " ".repeat(row - i) 
//      for (let j = 1; j <= i; j++) {
//         str = str + j                  //str += j           // можем менять на "*"
//     }
//         str = str + "\n"
//   }
// console.log(str)




//     1
//    121
//   12321
//  1234321
// 123454321

// let k = i мы начнем с i, если начнем с 1 то будет 11 в выводе а не 1
// let n = 5;
// let str = "";

//   for (let i = 1; i <= n; i++){
//    str += " ".repeat(n - i);
//   for (let j = 1; j <= i; j++){
//     str += j;
//   }
//   for (let k = i - 1; k >= 1; k--){
//     str += k
//   }
//   str += "\n";
// }  
// console.log(str);





// for (let i = 0; i <= 5; i++) {
//     for (let j = 0; j < 3; j++) {
//         console.log( '+'. repeat(j + i), i, j)
//     }
// }

// for (let k = 3; k > 0; k --) {
//     console.log('+'. repeat())
// }



// 1. 1/2 елочки

// for (let i = 0; i <= 5; i++) {
//         for (let j = 0; j < 1; j++) {
//             console.log('+'.repeat (j + i))          
//         }       
//     }  
    

//Нарисуйте ромб

//          1
//         121
//        12321
//       1234321
//      123454321
//     12345654321
//    1234567654321
//   123456787654321
//  12345678987654321
// 1234567890987654321
//  12345678987654321
//   123456787654321
//    1234567654321
//     12345654321
//      123454321
//       1234321
//        12321
//         121
//          1

// нужно отсечь 10, потому что выведет криво
// это если n = 15 (т.е больше 10)
// повторение 10 идет на этом цикле for (let k = i - 1; k >= 1; k--) где задается k. Поэтому нам нужно 
// убрать 1, чтобы она больше не дублировалась т.е k = i - 1

// let n = 10;
// let str = "";

//   for (let i = 1; i <= n; i++){
//    str += " ".repeat(n - i);
//   for (let j = 1; j <= i; j++){
//     str += j % 10;
//   }
//   for (let k = i - 1; k >= 1; k--){
//     str += k % 10
//   }
//   str += "\n";
// }  
// console.log(str);



//  Нарисуйте елочку
// *
// ***
// *****
// *******
// *********

// for ( let i = 0; i <= 5; i++) {
//     var str = "";
//     for ( let j = 0; j <= i; j++)
// {
// str += '*';
// }
// console.log (str)
// }


// i
// j       0123456789
// 0           *
// 1          ***
// 2         *****
// 3        *******
// 4       *********

//======================= Решение Стана
//3й цикл использую для наполнения пробелами
// for (let j = i; j < row - 1; j++) {
//   str += " "
// }
//Если не нужны бы были пробелы, то достаточно 2х циклов

// let row = 5
// str = ""

// for (let i = 0; i < row; i++) {
//     for (let j = i; j < row - 1; j++) {
//         str += " "
//     }
//     for (let k = 0; k < 2 * i + 1; k++) {
//     str += "*"
// }
// str += "\n"
// }
// console.log (str)



//====================== Решение Tatiana Volk
//  const maxHeigt = 5

// for(i = 0; i < C; i++) {

//     str = ""
//     numAsterisks = i
//     newSpaces = maxHeigt - numAsterisks 

//     //left spaces
//     for (s = 0; s < newSpaces; s++) {
//         str = str + " "
//     }
//     //left asterisk
//     for (a = 0; a < i; a++)
//     str = str + "*"
// }

// //central asterisks
// str += "*"

// //right asterisks
// for (a = 0; a < i; a++) {
//     str = str + "*"
// }

// //right spaces - not necessary
// // for (s = 0; s < numSpaces; s++) {
// //     str = str + " "
// // }
// console.log (str)




//======================== Решение на уроке

// let height = 5;
// for ( let i = 0; i < height; i++) {
//         var str = "";

//         for ( let j = 0; j < height - i; j++) {
//     str += ' ';
//     }
    
// for ( let star = 0; star < i; star++) {
//     str += '*';
// }
// str += '*';                                     //это наш ствол
// for (rStar = 0; rStar < i; rStar ++) {          //правыя сторона
// str += '*';
// }
//     console.log (str)
//     }


//  Елочка с границами
// |    *    |
// |   ***   |
// |  *****  |
// | ******* |
// |*********|

//на 1й интерации внешнего цикла когда i = 0 -> j = 0 и цикл повторится пока 0 < кол-во строк -1 
//до 4 раз выполнится этот цикл
//дальше он заходит в цикл где печатает *
//дальше с 4 пробелами повторится с правой стороны
//потом когда i поменяется и будет 1 у нас j будет = 1. Она юудет от 1 до 4 и 4 не включается
//и будет уже 3 пробела, потом отрисуется * и 3 пробела справа
//после отработки всей интерации т.к у нас str до начала цикла то то что было внутри цикла оно 
//уничтожится и когда откроется новый цикл, уже когда i поменяется на 1 у нас опять начнется все заново
//соответственно мы можем везде использовать j (вместо k). По названию она совпадает но она была 
//уничтожена системой

// let row = 5                      //задаем кол-во строк
// str = ""                        //переменная которая получает рез-т р-ты циклов и выводиться на печать           

// for (let i = 0; i < row; i++) {
//     str += "|"
//     for (let j = i; j < row - 1; j++) {         //4 раза прогонит цикл это 4 пробела слева
//         str += " "
//     }
//     for (let k = 0; k < 2 * i + 1; k++) {       //цикл который отвечает за *
//         str += "*"
//     }
//     for (let j = i; j < row - 1; j++) {         //цикл за оставшиеся пробелы справа
//         str += " "
//     }
//     str += "|"
//     str += "\n"
//     }
// console.log (str)




//  Нарисуйте пирамидку
// 1 
// 2 6 
// 3 7 10 
// 4 8 11 13 
// 5 9 12 14 15

// let row = 5
// let str = ""

// for (let i = 1; i <= row; i++) {
//     let num = i
//     for (let j = 1; j <= i; j++) {
//     str += num + " " 
//     num = num + (row - j)
//     }
//     str += "\n"
// }
// console.log (str)

